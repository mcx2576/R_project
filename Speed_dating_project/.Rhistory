setDT(contribution_rf, keep.rownames = TRUE)[]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>15,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>10,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>8,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>5,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>6,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>7,]
ggplot(contribution_rf_high, aes(x=rn,y=MeanDecreaseGini))+geom_bar(stat="identity")+
geom_bar(data=subset(contribution_rf_high, MeanDecreaseGini==max(MeanDecreaseGini)), aes(rn, MeanDecreaseGini),
fill="green", stat="identity")
m_rf <- train(dec.x~int_corr + samerace + age_o + race_o + pf_o_att + pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha +  age.x + field_cd.x + mn_sat.x + tuition.x + race.x + imprace.x + imprelig.x + income.x + goal.x + date.x + career_c.x + sports.x + tvsports.x + exercise.x + dining.x + museums.x + art.x + hiking.x + gaming.x + clubbing.x +reading.x + tv.x + theater.x + movies.x + concerts.x + music.x + shopping.x + yoga.x + exphappy.x + expnum.x + + attr1_1.x +
sinc1_1.x + intel1_1.x + fun1_1.x + amb1_1.x + shar1_1.x +
attr2_1.x + sinc2_1.x + intel2_1.x + fun2_1.x + amb2_1.x +
attr3_1.x + sinc3_1.x + fun3_1.x + intel3_1.x + amb3_1.x +
attr5_1.x + sinc5_1.x + intel5_1.x + fun5_1.x + amb5_1.x + + field_cd.y + mn_sat.y + tuition.y + imprace.y + imprelig.y + income.y + goal.y + date.y + go_out.y + career_c.y + sports.y + tvsports.y + exercise.y + dining.y + museums.y + art.y + hiking.y + gaming.y + clubbing.y + reading.y + tv.y + theater.y + movies.y + concerts.y + music.y + shopping.y + yoga.y + exphappy.y + expnum.y +
attr2_1.y + sinc2_1.y + intel2_1.y + fun2_1.y + amb2_1.y +
attr3_1.y + sinc3_1.y + fun3_1.y + intel3_1.y + amb3_1.y +
attr5_1.y + sinc5_1.y + intel5_1.y + fun5_1.y + amb5_1.y, data = usedate, na.action = 'na.exclude', method = "rf", metric = "Kappa", trControl = ctrl, tuneGrid = grid_rf)
m_rf <- train(dec.x~int_corr + samerace + age_o + race_o + pf_o_att + pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha +  age.x + field_cd.x + mn_sat.x + tuition.x + race.x + imprace.x + imprelig.x + income.x + goal.x + date.x + career_c.x + sports.x + tvsports.x + exercise.x + dining.x + museums.x + art.x + hiking.x + gaming.x + clubbing.x +reading.x + tv.x + theater.x + movies.x + concerts.x + music.x + shopping.x + yoga.x + exphappy.x + expnum.x + + attr1_1.x +
sinc1_1.x + intel1_1.x + fun1_1.x + amb1_1.x + shar1_1.x +
attr2_1.x + sinc2_1.x + intel2_1.x + fun2_1.x + amb2_1.x +
attr3_1.x + sinc3_1.x + fun3_1.x + intel3_1.x + amb3_1.x +
attr5_1.x + sinc5_1.x + intel5_1.x + fun5_1.x + amb5_1.x + + field_cd.y + mn_sat.y + tuition.y + imprace.y + imprelig.y + income.y + goal.y + date.y + go_out.y + career_c.y + sports.y + tvsports.y + exercise.y + dining.y + museums.y + art.y + hiking.y + gaming.y + clubbing.y + reading.y + tv.y + theater.y + movies.y + concerts.y + music.y + shopping.y + yoga.y + exphappy.y + expnum.y +
attr2_1.y + sinc2_1.y + intel2_1.y + fun2_1.y + amb2_1.y +
attr3_1.y + sinc3_1.y + fun3_1.y + intel3_1.y + amb3_1.y +
attr5_1.y + sinc5_1.y + intel5_1.y + fun5_1.y + amb5_1.y, data = usedate, na.action = 'na.exclude', method = "rf", metric = "Kappa", trControl = ctrl, tuneGrid = grid_rf)
m_rf <- train(match~int_corr + samerace + age_o + race_o + pf_o_att + pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha + age.x + field_cd.x + mn_sat.x + tuition.x + race.x + imprace.x + imprelig.x + income.x + goal.x + date.x + career_c.x + sports.x + tvsports.x + exercise.x + dining.x + museums.x + art.x + hiking.x + gaming.x + clubbing.x +reading.x + tv.x + theater.x + movies.x + concerts.x + music.x + shopping.x + yoga.x + exphappy.x + expnum.x + + attr1_1.x +
sinc1_1.x + intel1_1.x + fun1_1.x + amb1_1.x + shar1_1.x +
attr2_1.x + sinc2_1.x + intel2_1.x + fun2_1.x + amb2_1.x +
attr3_1.x + sinc3_1.x + fun3_1.x + intel3_1.x + amb3_1.x +
attr5_1.x + sinc5_1.x + intel5_1.x + fun5_1.x + amb5_1.x + + field_cd.y + mn_sat.y + tuition.y + imprace.y + imprelig.y + income.y + goal.y + date.y + go_out.y + career_c.y + sports.y + tvsports.y + exercise.y + dining.y + museums.y + art.y + hiking.y + gaming.y + clubbing.y + reading.y + tv.y + theater.y + movies.y + concerts.y + music.y + shopping.y + yoga.y + exphappy.y + expnum.y +
attr2_1.y + sinc2_1.y + intel2_1.y + fun2_1.y + amb2_1.y +
attr3_1.y + sinc3_1.y + fun3_1.y + intel3_1.y + amb3_1.y +
attr5_1.y + sinc5_1.y + intel5_1.y + fun5_1.y + amb5_1.y , data = usedate, na.action = 'na.exclude', method = "rf", metric = "Kappa", trControl = ctrl, tuneGrid = grid_rf)
m_rf
m_rf$finalModel
contribution_rf<-as.data.frame(importance(m_rf$finalModel))contribution_rf<-as.data.frame(importance(m_rf$finalModel))
contribution_rf<-as.data.frame(importance(m_rf$finalModel))
library(data.table)
setDT(contribution_rf, keep.rownames = TRUE)[]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>7,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>10,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>8,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>7,]
ggplot(contribution_rf_high, aes(x=rn,y=MeanDecreaseGini))+geom_bar(stat="identity")+
geom_bar(data=subset(contribution_rf_high, MeanDecreaseGini==max(MeanDecreaseGini)), aes(rn, MeanDecreaseGini),
fill="green", stat="identity")
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>7.5,]
ggplot(contribution_rf_high, aes(x=rn,y=MeanDecreaseGini))+geom_bar(stat="identity")+
geom_bar(data=subset(contribution_rf_high, MeanDecreaseGini==max(MeanDecreaseGini)), aes(rn, MeanDecreaseGini),
fill="green", stat="identity")
usedate$dec.x<-as.factor(usedate$dec.x)
set.seed(300)
m_rf <- train(dec.x~int_corr + samerace + age_o + race_o + pf_o_att + pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha +  age.x + field_cd.x + mn_sat.x + tuition.x + race.x + imprace.x + imprelig.x + income.x + goal.x + date.x + career_c.x + sports.x + tvsports.x + exercise.x + dining.x + museums.x + art.x + hiking.x + gaming.x + clubbing.x +reading.x + tv.x + theater.x + movies.x + concerts.x + music.x + shopping.x + yoga.x + exphappy.x + expnum.x + + attr1_1.x +
sinc1_1.x + intel1_1.x + fun1_1.x + amb1_1.x + shar1_1.x +
attr2_1.x + sinc2_1.x + intel2_1.x + fun2_1.x + amb2_1.x +
attr3_1.x + sinc3_1.x + fun3_1.x + intel3_1.x + amb3_1.x +
attr5_1.x + sinc5_1.x + intel5_1.x + fun5_1.x + amb5_1.x + field_cd.y + mn_sat.y + tuition.y + imprace.y + imprelig.y + income.y + goal.y + date.y + go_out.y + career_c.y + sports.y + tvsports.y + exercise.y + dining.y + museums.y + art.y + hiking.y + gaming.y + clubbing.y + reading.y + tv.y + theater.y + movies.y + concerts.y + music.y + shopping.y + yoga.y + exphappy.y + expnum.y +
attr2_1.y + sinc2_1.y + intel2_1.y + fun2_1.y + amb2_1.y +
attr3_1.y + sinc3_1.y + fun3_1.y + intel3_1.y + amb3_1.y +
attr5_1.y + sinc5_1.y + intel5_1.y + fun5_1.y + amb5_1.y, data = usedate, na.action = 'na.exclude', method = "rf", metric = "Kappa", trControl = ctrl, tuneGrid = grid_rf)
m_rf_d <- train(dec.x~int_corr + samerace + age_o + race_o + pf_o_att + pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha +  age.x + field_cd.x + mn_sat.x + tuition.x + race.x + imprace.x + imprelig.x + income.x + goal.x + date.x + career_c.x + sports.x + tvsports.x + exercise.x + dining.x + museums.x + art.x + hiking.x + gaming.x + clubbing.x +reading.x + tv.x + theater.x + movies.x + concerts.x + music.x + shopping.x + yoga.x + exphappy.x + expnum.x + + attr1_1.x +
sinc1_1.x + intel1_1.x + fun1_1.x + amb1_1.x + shar1_1.x +
attr2_1.x + sinc2_1.x + intel2_1.x + fun2_1.x + amb2_1.x +
attr3_1.x + sinc3_1.x + fun3_1.x + intel3_1.x + amb3_1.x +
attr5_1.x + sinc5_1.x + intel5_1.x + fun5_1.x + amb5_1.x + field_cd.y + mn_sat.y + tuition.y + imprace.y + imprelig.y + income.y + goal.y + date.y + go_out.y + career_c.y + sports.y + tvsports.y + exercise.y + dining.y + museums.y + art.y + hiking.y + gaming.y + clubbing.y + reading.y + tv.y + theater.y + movies.y + concerts.y + music.y + shopping.y + yoga.y + exphappy.y + expnum.y +
attr2_1.y + sinc2_1.y + intel2_1.y + fun2_1.y + amb2_1.y +
attr3_1.y + sinc3_1.y + fun3_1.y + intel3_1.y + amb3_1.y +
attr5_1.y + sinc5_1.y + intel5_1.y + fun5_1.y + amb5_1.y, data = usedate, na.action = 'na.exclude', method = "rf", metric = "Kappa", trControl = ctrl, tuneGrid = grid_rf)
#The final value used for the model was mtry = 18. The Accuracy is 0.856, Kappa statistic is 0.158, which is pretty reasonable for the a rf model#
m_rf_d
m_rf_d
contribution_rf<-as.data.frame(importance(m_rf_d$finalModel))
contribution_rf<-as.data.frame(importance(m_rf_d$finalModel))
library(data.table)
setDT(contribution_rf, keep.rownames = TRUE)[]
contribution_rf_d<-as.data.frame(importance(m_rf_d$finalModel))
library(data.table)
setDT(contribution_rf, keep.rownames = TRUE)[]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>7,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>20,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>15,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>12,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>9,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>10,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>9,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>9.5,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>9.8,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>9.9,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>10,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>11,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>10.5,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>10.2,]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>10.1,]
ggplot(contribution_rf_high, aes(x=rn,y=MeanDecreaseGini))+geom_bar(stat="identity")+
geom_bar(data=subset(contribution_rf_high, MeanDecreaseGini==max(MeanDecreaseGini)), aes(rn, MeanDecreaseGini),
fill="green", stat="identity")
names(usedate)
library(caret)
ctrl <- trainControl(method = "repeatedcv", number = 3, repeats = 3)
grid_rf <- expand.grid(.mtry = c(3, 9, 18,36))
usedate$dec.y<-as.factor(usedate$dec.y)
m_rf_d0 <- train(dec.y~int_corr + samerace + age_o + race_o + pf_o_att + pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha +  age.x + field_cd.x + mn_sat.x + tuition.x + race.x + imprace.x + imprelig.x + income.x + goal.x + date.x + career_c.x + sports.x + tvsports.x + exercise.x + dining.x + museums.x + art.x + hiking.x + gaming.x + clubbing.x +reading.x + tv.x + theater.x + movies.x + concerts.x + music.x + shopping.x + yoga.x + exphappy.x + expnum.x + + attr1_1.x +
sinc1_1.x + intel1_1.x + fun1_1.x + amb1_1.x + shar1_1.x +
attr2_1.x + sinc2_1.x + intel2_1.x + fun2_1.x + amb2_1.x +
attr3_1.x + sinc3_1.x + fun3_1.x + intel3_1.x + amb3_1.x +
attr5_1.x + sinc5_1.x + intel5_1.x + fun5_1.x + amb5_1.x + field_cd.y + mn_sat.y + tuition.y + imprace.y + imprelig.y + income.y + goal.y + date.y + go_out.y + career_c.y + sports.y + tvsports.y + exercise.y + dining.y + museums.y + art.y + hiking.y + gaming.y + clubbing.y + reading.y + tv.y + theater.y + movies.y + concerts.y + music.y + shopping.y + yoga.y + exphappy.y + expnum.y +
attr2_1.y + sinc2_1.y + intel2_1.y + fun2_1.y + amb2_1.y +
attr3_1.y + sinc3_1.y + fun3_1.y + intel3_1.y + amb3_1.y +
attr5_1.y + sinc5_1.y + intel5_1.y + fun5_1.y + amb5_1.y, data = usedate, na.action = 'na.exclude', method = "rf", metric = "Kappa", trControl = ctrl, tuneGrid = grid_rf)
m_rf_d
contribution_rf_d<-as.data.frame(importance(m_rf_d$finalModel))
library(data.table)
setDT(contribution_rf_d, keep.rownames = TRUE)[]
contribution_rf_high_d<-contribution_rf[contribution_rf_d$MeanDecreaseGini>10.1,]
ggplot(contribution_rf_high_d, aes(x=rn,y=MeanDecreaseGini))+geom_bar(stat="identity")+
geom_bar(data=subset(contribution_rf_high_d, MeanDecreaseGini==max(MeanDecreaseGini)), aes(rn, MeanDecreaseGini),
fill="green", stat="identity")
m_rf_d0
contribution_rf_d0<-as.data.frame(importance(m_rf_d0$finalModel))
library(data.table)
setDT(contribution_rf_d0, keep.rownames = TRUE)[]
View(contribution_rf_high_d)
contribution_rf_d0<-as.data.frame(importance(m_rf_d0$finalModel))
library(data.table)
setDT(contribution_rf_d0, keep.rownames = TRUE)[]
contribution_rf_high_d<-contribution_rf_d[contribution_rf_d$MeanDecreaseGini>10.1,]
contribution_rf_high_d0<-contribution_rf_d0[contribution_rf_d0$MeanDecreaseGini>10.1,]
contribution_rf_high_d0<-contribution_rf_d0[contribution_rf_d0$MeanDecreaseGini>13,]
contribution_rf_high_d0<-contribution_rf_d0[contribution_rf_d0$MeanDecreaseGini>15,]
contribution_rf_high_d0<-contribution_rf_d0[contribution_rf_d0$MeanDecreaseGini>14,]
ggplot(contribution_rf_high_d0, aes(x=rn,y=MeanDecreaseGini))+geom_bar(stat="identity")+
geom_bar(data=subset(contribution_rf_high_d0, MeanDecreaseGini==max(MeanDecreaseGini)), aes(rn, MeanDecreaseGini),
fill="green", stat="identity")
View(contribution_rf_high_d0)
m_rf$modelInfo
m_rf$modelType
m_rf$finalModel
m_rf$pred
m_rf$finalModel
m_rf$call
m_rf
m_rf_d
library(gmodels)
logit.model1 <- glm(match ~ samerace + age_o + pf_o_att +
+ pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha + attr1_1.x +
sinc1_1.x + intel1_1.x + fun1_1.x + amb1_1.x + shar1_1.x , data = usedate, family = "binomial",na.action = 'na.exclude')
summary(logit.model1)
m_rf <- train(match~int_corr + samerace + age_o + race_o + pf_o_att + pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha + age.x + field_cd.x + mn_sat.x + tuition.x + race.x + imprace.x + imprelig.x + income.x + goal.x + date.x + career_c.x + sports.x + tvsports.x + exercise.x + dining.x + museums.x + art.x + hiking.x + gaming.x + clubbing.x +reading.x + tv.x + theater.x + movies.x + concerts.x + music.x + shopping.x + yoga.x + exphappy.x + expnum.x + + attr1_1.x +
sinc1_1.x + intel1_1.x + fun1_1.x + amb1_1.x + shar1_1.x +
attr2_1.x + sinc2_1.x + intel2_1.x + fun2_1.x + amb2_1.x +
attr3_1.x + sinc3_1.x + fun3_1.x + intel3_1.x + amb3_1.x +
attr5_1.x + sinc5_1.x + intel5_1.x + fun5_1.x + amb5_1.x + + field_cd.y + mn_sat.y + tuition.y + imprace.y + imprelig.y + income.y + goal.y + date.y + go_out.y + x = career_c.y + sports.y + tvsports.y + exercise.y + dining.y + museums.y + art.y + hiking.y + gaming.y + clubbing.y + reading.y + tv.y + theater.y + movies.y + concerts.y + music.y + shopping.y + yoga.y + exphappy.y + expnum.y +
attr2_1.y + sinc2_1.y + intel2_1.y + fun2_1.y + amb2_1.y +
attr3_1.y + sinc3_1.y + fun3_1.y + intel3_1.y + amb3_1.y +
attr5_1.y + sinc5_1.y + intel5_1.y + fun5_1.y + amb5_1.y , data = usedate, na.action = 'na.exclude', method = "rf", metric = "Kappa", trControl = ctrl, tuneGrid = grid_rf)
m_rf <- train(match~int_corr + samerace + age_o + race_o + pf_o_att + pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha + age.x + field_cd.x + mn_sat.x + tuition.x + race.x + imprace.x + imprelig.x + income.x + goal.x + date.x + career_c.x + sports.x + tvsports.x + exercise.x + dining.x + museums.x + art.x + hiking.x + gaming.x + clubbing.x +reading.x + tv.x + theater.x + movies.x + concerts.x + music.x + shopping.x + yoga.x + exphappy.x + expnum.x + attr1_1.x +
sinc1_1.x + intel1_1.x + fun1_1.x + amb1_1.x + shar1_1.x +
attr2_1.x + sinc2_1.x + intel2_1.x + fun2_1.x + amb2_1.x +
attr3_1.x + sinc3_1.x + fun3_1.x + intel3_1.x + amb3_1.x +
attr5_1.x + sinc5_1.x + intel5_1.x + fun5_1.x + amb5_1.x + + field_cd.y + mn_sat.y + tuition.y + imprace.y + imprelig.y + income.y + goal.y + date.y + go_out.y + x = career_c.y + sports.y + tvsports.y + exercise.y + dining.y + museums.y + art.y + hiking.y + gaming.y + clubbing.y + reading.y + tv.y + theater.y + movies.y + concerts.y + music.y + shopping.y + yoga.y + exphappy.y + expnum.y +
attr2_1.y + sinc2_1.y + intel2_1.y + fun2_1.y + amb2_1.y +
attr3_1.y + sinc3_1.y + fun3_1.y + intel3_1.y + amb3_1.y +
m_rf <- train(match~int_corr + samerace + age_o + race_o + pf_o_att + pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha + age.x + field_cd.x + mn_sat.x + tuition.x + race.x + imprace.x + imprelig.x + income.x + goal.x + date.x + career_c.x + sports.x + tvsports.x + exercise.x + dining.x + museums.x + art.x + hiking.x + gaming.x + clubbing.x +reading.x + tv.x + theater.x + movies.x + concerts.x + music.x + shopping.x + yoga.x + exphappy.x + expnum.x + attr1_1.x +
sinc1_1.x + intel1_1.x + fun1_1.x + amb1_1.x + shar1_1.x +
attr2_1.x + sinc2_1.x + intel2_1.x + fun2_1.x + amb2_1.x +
attr3_1.x + sinc3_1.x + fun3_1.x + intel3_1.x + amb3_1.x +
attr5_1.x + sinc5_1.x + intel5_1.x + fun5_1.x + amb5_1.x + field_cd.y + mn_sat.y + tuition.y + imprace.y + imprelig.y + income.y + goal.y + date.y + go_out.y + career_c.y + sports.y + tvsports.y + exercise.y + dining.y + museums.y + art.y + hiking.y + gaming.y + clubbing.y + reading.y + tv.y + theater.y + movies.y + concerts.y + music.y + shopping.y + yoga.y + exphappy.y + expnum.y +
attr2_1.y + sinc2_1.y + intel2_1.y + fun2_1.y + amb2_1.y +
attr3_1.y + sinc3_1.y + fun3_1.y + intel3_1.y + amb3_1.y +
attr5_1.y + sinc5_1.y + intel5_1.y + fun5_1.y + amb5_1.y , data = usedate, na.action = 'na.exclude', method = "rf", metric = "Kappa", trControl = ctrl, tuneGrid = grid_rf)
#The final value used for the model was mtry = 36. The accuracy is 0.843,which is relatively high#
m_rf$finalModel
#Showing the importance of each variables#
contribution_rf<-as.data.frame(importance(m_rf$finalModel))
m_rf$finalModel
m_rf
m_rf <- train(match~int_corr + samerace + age_o + race_o + pf_o_att + pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha + age.x + field_cd.x + mn_sat.x + tuition.x + race.x + imprace.x + imprelig.x + income.x + goal.x + date.x + career_c.x + sports.x + tvsports.x + exercise.x + dining.x + museums.x + art.x + hiking.x + gaming.x + clubbing.x +reading.x + tv.x + theater.x + movies.x + concerts.x + music.x + shopping.x + yoga.x + exphappy.x + expnum.x + attr1_1.x +
sinc1_1.x + intel1_1.x + fun1_1.x + amb1_1.x + shar1_1.x +
attr2_1.x + sinc2_1.x + intel2_1.x + fun2_1.x + amb2_1.x +
attr3_1.x + sinc3_1.x + fun3_1.x + intel3_1.x + amb3_1.x +
attr5_1.x + sinc5_1.x + intel5_1.x + fun5_1.x + amb5_1.x + field_cd.y + mn_sat.y + tuition.y + imprace.y + imprelig.y + income.y + goal.y + date.y + go_out.y + career_c.y + sports.y + tvsports.y + exercise.y + dining.y + museums.y + art.y + hiking.y + gaming.y + clubbing.y + reading.y + tv.y + theater.y + movies.y + concerts.y + music.y + shopping.y + yoga.y + exphappy.y + expnum.y +
attr2_1.y + sinc2_1.y + intel2_1.y + fun2_1.y + amb2_1.y +
attr3_1.y + sinc3_1.y + fun3_1.y + intel3_1.y + amb3_1.y +
attr5_1.y + sinc5_1.y + intel5_1.y + fun5_1.y + amb5_1.y , data = usedate, na.action = 'na.exclude', method = "rf", metric = "Kappa", trControl = ctrl, tuneGrid = grid_rf)
m_rf
contribution_rf<-as.data.frame(importance(m_rf$finalModel))
setDT(contribution_rf, keep.rownames = TRUE)[]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>7.5,]
ggplot(contribution_rf_high, aes(x=rn,y=MeanDecreaseGini))+geom_bar(stat="identity")+
geom_bar(data=subset(contribution_rf_high, MeanDecreaseGini==max(MeanDecreaseGini)), aes(rn, MeanDecreaseGini),
fill="green", stat="identity")
View(usedate)
View(date3)
m_rf_d
ggplot(contribution_rf_high_d, aes(x=rn,y=MeanDecreaseGini))+geom_bar(stat="identity")+
geom_bar(data=subset(contribution_rf_high_d, MeanDecreaseGini==max(MeanDecreaseGini)), aes(rn, MeanDecreaseGini),
fill="green", stat="identity")
library(gmodels)
logit.model1 <- glm(match ~ samerace + age_o + pf_o_att +
+ pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha + attr1_1.x +
sinc1_1.x + intel1_1.x + fun1_1.x + amb1_1.x + shar1_1.x , data = usedate, family = "binomial",na.action = 'na.exclude')
summary(logit.model1)
library(gmodels)
logit.model1 <- glm(match ~ tuition.x +  tuition.x + income.y + income.x, data = usedate, family = "binomial",na.action = 'na.exclude')
summary(logit.model1)
library(gmodels)
logit.model1 <- glm(match ~ tuition.x +  tuition.y + income.y + income.x, data = usedate, family = "binomial",na.action = 'na.exclude')
summary(logit.model1)
# Chunk 1
#Download the libraries that will be necessary to our analysis.
suppressPackageStartupMessages(library("aod"))
suppressPackageStartupMessages(library("dplyr"))
suppressPackageStartupMessages(library("reshape2"))
suppressPackageStartupMessages(library("ggplot2"))
suppressPackageStartupMessages(library("stats"))
suppressPackageStartupMessages(library("randomForest"))
suppressPackageStartupMessages(library("caret"))
suppressPackageStartupMessages(library("data.table"))
# Chunk 2
setwd("~/Desktop/TO414 - Directory Files/Final Project ")
datedata <- read.csv("Speed Dating Data.csv", header = T)
#Variables to Change Into Factors:
datedata$field_cd <- as.factor(datedata$field_cd)
datedata$race <- as.factor(datedata$race)
datedata$gender <- as.factor(datedata$gender)
datedata$goal <- as.factor(datedata$goal)
datedata$date <- as.factor(datedata$date)
datedata$go_out <- as.factor(datedata$go_out)
datedata$career_c <- as.factor(datedata$career_c)
datedata$length <- as.factor(datedata$length)
datedata$numdat_2 <- as.factor(datedata$numdat_2)
datedata$date_3 <- as.factor(datedata$date_3)
#Variables to Change Into Numbers
datedata$income <- as.numeric(datedata$income)
datedata$mn_sat <- as.numeric(datedata$mn_sat)
datedata$tuition <- as.numeric(datedata$tuition)
# Chunk 3
Gender <- c("Female", "Male")
gender_df <- datedata[!is.na(datedata$gender),] %>%
distinct(iid, .keep_all = TRUE) %>%
group_by(gender) %>%
summarise(amount = n())
ggplot(gender_df, aes(x=gender, y=amount, fill=Gender)) + geom_bar(stat = "identity") + xlab(NULL) + ylab("Count") + ggtitle("Gender Distribution") + coord_flip() + scale_x_discrete(labels = Gender)
# Chunk 4
Race <- c("Black/African American", "European/Caucasian American", "Latino/Hispanic American", "Asian/Pacific Islander", "Other")
#Note, we exclude Native Americans because there are none in our survey data
race_df <- datedata[!is.na(datedata$race),] %>%
distinct(iid, .keep_all = TRUE) %>%
group_by(gender, race) %>%
summarise(amount = n())
ggplot(race_df, aes(x = race, y = amount, fill = gender)) + geom_bar(stat = "identity", position = "dodge") + xlab(NULL) + ylab("Count") + ggtitle("Race Distribution by Gender") + coord_flip() + scale_x_discrete(labels = Race)
# Chunk 5
Race <- c("Black/African American", "European/Caucasian American", "Latino/Hispanic American", "Asian/Pacific Islander", "Other")
imprace_df <- datedata[!is.na(datedata$imprace),] %>%
distinct(iid, .keep_all = TRUE) %>%
group_by(gender, race) %>%
summarise(avg = mean(imprace))
ggplot(imprace_df, aes(x = race, y = avg, fill = gender)) + geom_bar(stat = "identity", position = "dodge") + xlab(NULL) + ylab("Count") + ggtitle("Importance of Partner's Race by Race & Gender") + coord_flip() + scale_x_discrete(labels = Race)
# Chunk 6
goal.coded <- c("Fun night out", "Meet new people", "Get date", "Serious relationship", "To say I did it", "Other")
goal_df <- datedata[!is.na(datedata$goal),] %>%
distinct(iid, .keep_all = TRUE) %>%
group_by(gender, goal) %>%
summarise(amount = n())
ggplot(goal_df, aes(x = goal, y = amount, fill = gender)) + geom_bar(stat = "identity", position = "dodge") + xlab(NULL) + ylab("Count") + ggtitle("Goal Distribution by Gender") + coord_flip() + scale_x_discrete( labels = goal.coded, breaks = 1:6)
# Chunk 7
goout.coded <- c("Several times a week", "Twice a week", "Once a week", "Twice a month", "Once a month", "Several times a year", "Never")
goout_df <- datedata[!is.na(datedata$go_out),] %>%
distinct(iid, .keep_all = TRUE) %>%
group_by(gender, go_out) %>%
summarise(amount = n())
ggplot(goout_df, aes(x = go_out, y = amount, fill = gender)) + geom_bar(stat = "identity", position = "dodge") + xlab(NULL) + ylab("Count") + ggtitle("Going Out Habits by Gender") + coord_flip() + scale_x_discrete( labels = goout.coded, breaks = 1:7)
# Chunk 8
date.coded <- c("Several times a week", "Twice a week", "Once a week", "Twice a month", "Once a month", "Several times a year", "Never")
date_df <- datedata[!is.na(datedata$date),] %>%
distinct(iid, .keep_all = TRUE) %>%
group_by(gender, date) %>%
summarise(amount = n())
ggplot(date_df, aes(x = date, y = amount, fill = gender)) + geom_bar(stat = "identity", position = "dodge") + xlab(NULL) + ylab("Count") + ggtitle("Dating Habits by Gender") + coord_flip() + scale_x_discrete( labels = date.coded, breaks = 1:7)
# Chunk 9
#New Dataset Recording Individual's Preferences & Demographical Background
date1<-datedata[,c(1,11:69,98:107)]
#New Dataset Recording Individual's Partner's Demographical Background
date2<-datedata[,c(1,11:12,25:69,98:107)]
#Merging the Two Data Sets Together
newdate<-merge(date1, date2, by.x=c('iid','pid'), by.y=c('pid','iid'))
newdate<-newdate[newdate$iid > newdate$pid,]
# Chunk 10
nomatch <- length(which(newdate$match == 0))
match <- length(which(newdate$match == 1))
# Chunk 11
#Data Frame of Matches
Number.of.Matches <- c(nomatch, match)
Number.of.Matches<-as.data.frame(Number.of.Matches)
Number.of.Matches$status<-c("No Match","Match")
ggplot(data=Number.of.Matches,aes(x=status,y=Number.of.Matches,fill=status)) + geom_bar(stat = "identity")
# Chunk 12
newdate$dec.x <- as.numeric(newdate$dec.x)
newdate$dec.y <- as.numeric(newdate$dec.y)
newdate$combineddec = newdate$dec.x + newdate$dec.y
newdate$combineddec <- as.factor(newdate$combineddec)
ggplot(newdate, aes(x=combineddec, fill=combineddec)) + geom_bar(position = "dodge") + ggtitle("Understanding Decisions") + labs(x = "Number of Decisions per Individual Meeting", y = "Count")
# Chunk 13
attach(datedata)
SurveyChange <- matrix(c(mean(attr1_s,na.rm=TRUE),mean(attr7_2,na.rm=TRUE),mean(attr7_3,na.rm=TRUE),mean(sinc1_s,na.rm=TRUE),mean(sinc7_2,na.rm=TRUE),mean(sinc7_3,na.rm=TRUE),mean(intel1_s,na.rm=TRUE),mean(intel7_2,na.rm=TRUE),mean(intel7_3,na.rm=TRUE),mean(fun1_s,na.rm=TRUE),mean(fun7_2,na.rm=TRUE),mean(fun7_3,na.rm=TRUE),mean(amb1_s,na.rm=TRUE),mean(amb7_2,na.rm=TRUE),mean(amb7_3,na.rm=TRUE),mean(shar1_s,na.rm=TRUE),mean(shar7_2,na.rm=TRUE),mean(shar7_3,na.rm=TRUE)),ncol=6,byrow=FALSE)
colnames(SurveyChange) <- c("Attractiveness","Sincerity","Intelligence","Fun","Ambition","Shared Interests")
SurveyChange<-as.data.frame(SurveyChange)
SurveyChange$Time<-c("Time1","Time2","Time3")
#Creating line chart to show how allocation of importance changed over time
melted = melt(SurveyChange, id.vars="Time")
ggplot(data=melted, aes(x=Time, y=value, group=variable, color=variable)) + geom_line() + geom_path(alpha = 0.9)
# Chunk 14
#table(datedata$dec, useNA = "ifany")
##We don't have any NAs - good.
#segment into male ---
datedata.yes <- filter(datedata, dec == 1)
datedata.yes.survey <- datedata.yes[99:103]
datedata.no <- filter(datedata, dec == 0)
datedata.no.survey <- datedata.no[99:103]
ggplot(melt(datedata.yes.survey), aes(variable, value,color=variable)) + geom_boxplot() + ggtitle("How were people that received a yes decision rated?") + labs(x="Trait", y="Rating") + scale_x_discrete(labels = c("Attractiveness", "Sincerity", "Intelligence", "Fun", "Ambition")) + scale_y_continuous(limits = c(0, 10), breaks = c(0,2,4,6,8,10))
ggplot(melt(datedata.no.survey), aes(variable, value,color=variable)) + geom_boxplot() + ggtitle("How were people that received a no decision rated?") + labs(x="Trait", y="Rating") + scale_x_discrete(labels = c("Attractiveness", "Sincerity", "Intelligence", "Fun", "Ambition")) + scale_y_continuous(limits = c(0, 10), breaks = c(0,2,4,6,8,10))
# Chunk 15
order.coded <- c("First", "Second", "Third", "Fourth", "Fifth", "Sixth", "Seventh", "Eighth", "Nineth", "Tenth", "Eleventh", "Twelfth", "Thirteenth", "Fourteenth", "Fifteenth", "Sixteenth", "Seventeenth", "Eighteenth", "Nineteenth", "Twentieth", "Twenty-first", "Twenty-second")
matchdatedata <- filter(datedata, match == 1)
order_df <- matchdatedata[!is.na(matchdatedata$order),] %>%
distinct(iid, .keep_all = TRUE) %>%
group_by(gender, order) %>%
summarise(amount = n())
ggplot(order_df, aes(x=order, y=amount, fill=gender)) + geom_bar(stat = "identity", position = "dodge") + xlab(NULL) + ylab("Count") + ggtitle("Match Distribution by Date Order") + coord_flip() + scale_x_continuous(labels = order.coded, breaks = 1:22)
# Chunk 16
#14-15, 36, 41-42,44,47-48,  50-97
#Create a new dataset recording the person's preference and demographical background
#keeps match in this dataframe, what we're looking to predict
date1<-datedata[,c(1,3,11:13,14:15,36,41:42,44,47:48,50:97)]
#Create a new dataset recording the person's partner's demographical background
date2<-datedata[,c(1,3,11:12,14:15,36,41:42,44,47:48,50:97)]
newdate<-merge(date1, date2, by.x=c('iid','pid'), by.y=c('pid','iid'))
newdate$match<-as.factor(newdate$match)
#This section is showing that when we merged the 2 dataframes, some rows were deleted. This was the result of some iid/pids appearing , but not having a match. Therefore it is ok that during the merge some rows were deleted because we're only interested in the rows that had an actual match.
#which(is.na(newdate$pid))
#z <- newdate[c(1756, 1766,1776, 1786, 1796,1806,1816,1826,1836,1846),]
#View(z)
#y <- newdate[8379:8388,]
#View(y)
#verifies that the number of iids is consistent across the merged datasets.
#table(unique(datedata$pid, useNA = "ifany"))
#table(unique(newdate$iid), useNA = "ifany")
# Chunk 17
#Now that we have a merged data frame that fills in demographic information about the partner, we can create a new dataset that is more workable with a randomForest model.
#reload newdate and randomizes the data
newdate_rand <- newdate[order(runif(8368)), ]
#creates a new dataframe that only creates 1 edition of each match.
newdate_rand1 <- subset(newdate_rand, iid > pid)
#old frame before the subset
#table(unique(newdate_rand$iid, useNA = "ifany"))
#new frame with the subset. visualizes where the id shows up. an id that shows up in one shouldn't show up in the other column.
#table(newdate_rand1$iid, useNA = "ifany")
#table(newdate_rand1$pid, useNA = "ifany")
#compares how many rows before and after the subset. It should eliminate exactly half the number of rows.
#nrow(newdate_rand)
#nrow(newdate_rand1)
# Chunk 18
#reloads in case need to revert back to prior dataset.
newdate.final <- newdate_rand1
#Person X is always male
#table(newdate.final$gender.x)
#Person Y is always female
#table(newdate.final$gender.y)
#Don't use these columns that are factors or non-numeric values.
#str(newdate.final)
# Don't impute the following rows:
# 1,2,3,4,5,8,11,12,13,14,62,63,66,69,70,71,72
#which(colnames(newdate.final) == "iid") #1
#which(colnames(newdate.final) == "pid") #2
#which(colnames(newdate.final) == "match") #5
#which(colnames(newdate.final) == "gender.x") # 3
#which(colnames(newdate.final) == "partner.x")  #4
#which(colnames(newdate.final) == "samerace.x") # 7
#which(colnames(newdate.final) == "field_cd.x") #8
#which(colnames(newdate.final) == "zipcode.x") #11
#which(colnames(newdate.final) == "date.x") #12
#which(colnames(newdate.final) == "go_out.x") #13
#which(colnames(newdate.final) == "career_c.x") #14
#which(colnames(newdate.final) == "gender.y")  #62
#which(colnames(newdate.final) == "partner.y") #63
#which(colnames(newdate.final) == "samerace.y") # 65
#which(colnames(newdate.final) == "field_cd.y") #66
#which(colnames(newdate.final) == "zipcode.y") #69
#which(colnames(newdate.final) == "date.y") #70
#which(colnames(newdate.final) == "go_out.y") #71
#which(colnames(newdate.final) == "career_c.y") #72
#checking the various surveys to see if they have been normalized
#summary(subset(datedata$amb4_1, datedata$wave == 15))
#Overview of the Survey Data
#1_1 is good
#2_1 is good. different scales, but fixed it.
#3_1 all waves on same scale.
#4_1 hasn't been fixed. doesn't appear to be biggest indicator so will ignore.
#5_1 is good. all waves on same scale
# # 1:5,7:8,11:14,62:63,65:66,69:72
#ncol(newdate.final)
for(i in 1:ncol(newdate.final[,c(6,9:10,15:61,64,67:68,73:119)])){
newdate.final[is.na(newdate.final[,i]), i] <- mean(newdate.final[,i], na.rm = TRUE)
}
#which(colnames(newdate.final) == "zipcode.x") # need to delete columns
#which(colnames(newdate.final) == "zipcode.y") # need to delete columns
#Need to delete zipcode, not good for model.matrix.
newdate.edit <- newdate.final[,c(-11,-69)]
#verifies zipcode is gone
#which(colnames(newdate.edit) == "zipcode.x")
#which(colnames(newdate.edit) == "zipcode.y")
options(na.action='na.pass')
#As we can see, the x values correspond to all the males and the y values correspond to all the females.
#table(newdate.edit$gender.x)
#table(newdate.edit$gender.y)
#as.data.frame(model.matrix(~ . - 1, student))
newdate_n <- as.data.frame(model.matrix(~.-1, data=newdate.edit))
#paste0(colnames(newdate_n), collapse =" + ")
#Not using survey 4
# Chunk 19
#Career Model
log.model.a_M <- glm(match1 ~ career_c.x2 + career_c.x3 + career_c.x4 + career_c.x5 + career_c.x6 + career_c.x7 + career_c.x8 + career_c.x9 + career_c.x10 + career_c.x11 + career_c.x12 + career_c.x13 + career_c.x14 + career_c.x15 + career_c.x16 + career_c.x17, data = newdate_n, family = "binomial", na.action = 'na.exclude')
log.model.a_M
# Chunk 20
log.model.a_F <- glm(match1 ~ career_c.y2 + career_c.y3 + career_c.y4 + career_c.y5 + career_c.y6 + career_c.y7 + career_c.y8 + career_c.y9 + career_c.y10 + career_c.y11 + career_c.y12 + career_c.y13 + career_c.y14 + career_c.y15 + career_c.y16 + career_c.y17, data = newdate_n, family = "binomial", na.action = 'na.exclude')
log.model.a_F
# Chunk 21
#Expectations and how they predict a match
log.model.b <- glm(match1 ~ exphappy.x + expnum.x + exphappy.y + expnum.y, data = newdate_n, family = "binomial", na.action = 'na.exclude')
log.model.b
# Chunk 22
log.model.c <- glm(match1 ~ sports.x + tvsports.x + exercise.x + dining.x + museums.x + art.x + hiking.x + gaming.x + clubbing.x + reading.x + tv.x + theater.x + movies.x + concerts.x + music.x + shopping.x + yoga.x + sports.y + tvsports.y + exercise.y + dining.y + museums.y + art.y + hiking.y + gaming.y + clubbing.y + reading.y + tv.y + theater.y + movies.y + concerts.y + music.y + shopping.y + yoga.y, data = newdate_n, family = "binomial", na.action = 'na.exclude')
log.model.c
# Chunk 23
log.model.g_M <- glm(match1 ~ date.x2 + date.x3 + date.x4 + date.x5 + date.x6 + date.x7 + go_out.x2 + go_out.x3 + go_out.x4 + go_out.x5 + go_out.x6 + go_out.x7, data = newdate_n, family = "binomial", na.action = 'na.exclude')
log.model.g_M
log.model.g_F <- glm(match1 ~  date.y2 + date.y3 + date.y4 + date.y5 + date.y6 + date.y7 + go_out.y2 + go_out.y3 + go_out.y4 + go_out.y5 + go_out.y6 + go_out.y7, data = newdate_n, family = "binomial", na.action = 'na.exclude')
log.model.g_F
# Chunk 24
#Survey 3_1
log.model.e <- glm(match1 ~ attr3_1.x + sinc3_1.x + fun3_1.x + intel3_1.x + amb3_1.x + attr3_1.y + sinc3_1.y + fun3_1.y + intel3_1.y + amb3_1.y, data = newdate_n, family = "binomial", na.action = 'na.exclude')
log.model.e
# Chunk 25: setup
#Create a new dataset recording the person's preference and demographical background#
date1<-datedata[,c(1,3,11:75,82:86,88:98)]
#Create a new dataset recording the person's partner's demographical background#
date2<-datedata[,c(1,3,11:12,25:75,82:86,88:98)]
date3<-merge(date1, date2, by.x=c('iid','pid'), by.y=c('pid','iid'))
date3<-date3[date3$iid>date3$pid,]
usedate<-date3[,c(5:26,28,30:34,37:40,42:83,97:103,106:152)]
usedate$match<-as.factor(usedate$match)
usedate$career_c.x<-as.factor(usedate$career_c.x)
usedate$career_C.y<-as.factor(usedate$career_c.y)
for(i in 1:ncol(usedate[,c(2:22,24:25,27:29,34:73,77:79,85:128)])){
usedate[is.na(usedate[,i]), i] <- mean(usedate[,i], na.rm = TRUE)
}
usedate$match<-as.factor(usedate$match)
#Random Forest to identify key contributers.
set.seed(300)
options(na.action='na.pass')
# Chunk 26
#Random forest to determine decision
ctrl <- trainControl(method = "repeatedcv", number = 3, repeats = 3)
grid_rf <- expand.grid(.mtry = c(3, 9, 18,36))
usedate$dec.x<-as.factor(usedate$dec.x)
set.seed(300)
m_rf_d <- train(dec.x~int_corr + samerace + age_o + race_o + pf_o_att + pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha +  age.x + field_cd.x + mn_sat.x + tuition.x + race.x + imprace.x + imprelig.x + income.x + goal.x + date.x + career_c.x + sports.x + tvsports.x + exercise.x + dining.x + museums.x + art.x + hiking.x + gaming.x + clubbing.x +reading.x + tv.x + theater.x + movies.x + concerts.x + music.x + shopping.x + yoga.x + exphappy.x + expnum.x + + attr1_1.x +
sinc1_1.x + intel1_1.x + fun1_1.x + amb1_1.x + shar1_1.x +
attr2_1.x + sinc2_1.x + intel2_1.x + fun2_1.x + amb2_1.x +
attr3_1.x + sinc3_1.x + fun3_1.x + intel3_1.x + amb3_1.x +
attr5_1.x + sinc5_1.x + intel5_1.x + fun5_1.x + amb5_1.x + field_cd.y + mn_sat.y + tuition.y + imprace.y + imprelig.y + income.y + goal.y + date.y + go_out.y + career_c.y + sports.y + tvsports.y + exercise.y + dining.y + museums.y + art.y + hiking.y + gaming.y + clubbing.y + reading.y + tv.y + theater.y + movies.y + concerts.y + music.y + shopping.y + yoga.y + exphappy.y + expnum.y +
attr2_1.y + sinc2_1.y + intel2_1.y + fun2_1.y + amb2_1.y +
attr3_1.y + sinc3_1.y + fun3_1.y + intel3_1.y + amb3_1.y +
attr5_1.y + sinc5_1.y + intel5_1.y + fun5_1.y + amb5_1.y, data = usedate, na.action = 'na.exclude', method = "rf", metric = "Kappa", trControl = ctrl, tuneGrid = grid_rf)
#m_rf_d
# Chunk 27
#Showing the importance of each variables#
contribution_rf_d<-as.data.frame(importance(m_rf_d$finalModel))
setDT(contribution_rf_d, keep.rownames = TRUE)[]
contribution_rf_high_d<-contribution_rf_d[contribution_rf_d$MeanDecreaseGini>10.1,]
# Chunk 28
#Present the importance of vairable in bar chart#
ggplot(contribution_rf_high_d, aes(x=rn,y=MeanDecreaseGini))+geom_bar(stat="identity")+
geom_bar(data=subset(contribution_rf_high_d, MeanDecreaseGini==max(MeanDecreaseGini)), aes(rn, MeanDecreaseGini),
fill="green", stat="identity")
# Chunk 29
ctrl <- trainControl(method = "repeatedcv", number = 3, repeats = 3)
usedate$match<-as.factor(usedate$match)
grid_rf <- expand.grid(.mtry = c(3, 9, 18, 36))
set.seed(300)
m_rf <- train(match~int_corr + samerace + age_o + race_o + pf_o_att + pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha + age.x + field_cd.x + mn_sat.x + tuition.x + race.x + imprace.x + imprelig.x + income.x + goal.x + date.x + career_c.x + sports.x + tvsports.x + exercise.x + dining.x + museums.x + art.x + hiking.x + gaming.x + clubbing.x +reading.x + tv.x + theater.x + movies.x + concerts.x + music.x + shopping.x + yoga.x + exphappy.x + expnum.x + attr1_1.x +
sinc1_1.x + intel1_1.x + fun1_1.x + amb1_1.x + shar1_1.x +
attr2_1.x + sinc2_1.x + intel2_1.x + fun2_1.x + amb2_1.x +
attr3_1.x + sinc3_1.x + fun3_1.x + intel3_1.x + amb3_1.x +
attr5_1.x + sinc5_1.x + intel5_1.x + fun5_1.x + amb5_1.x + field_cd.y + mn_sat.y + tuition.y + imprace.y + imprelig.y + income.y + goal.y + date.y + go_out.y + career_c.y + sports.y + tvsports.y + exercise.y + dining.y + museums.y + art.y + hiking.y + gaming.y + clubbing.y + reading.y + tv.y + theater.y + movies.y + concerts.y + music.y + shopping.y + yoga.y + exphappy.y + expnum.y +
attr2_1.y + sinc2_1.y + intel2_1.y + fun2_1.y + amb2_1.y +
attr3_1.y + sinc3_1.y + fun3_1.y + intel3_1.y + amb3_1.y +
attr5_1.y + sinc5_1.y + intel5_1.y + fun5_1.y + amb5_1.y , data = usedate, na.action = 'na.exclude', method = "rf", metric = "Kappa", trControl = ctrl, tuneGrid = grid_rf)
#The final value used for the model was mtry = 36. The accuracy is 0.843,which is relatively high#
#m_rf
#Showing the importance of each variables#
# Chunk 30
contribution_rf<-as.data.frame(importance(m_rf$finalModel))
setDT(contribution_rf, keep.rownames = TRUE)[]
contribution_rf_high<-contribution_rf[contribution_rf$MeanDecreaseGini>7.5,]
# Chunk 31
#Present the importance of vairable in bar chart#
ggplot(contribution_rf_high, aes(x=rn,y=MeanDecreaseGini))+geom_bar(stat="identity")+
geom_bar(data=subset(contribution_rf_high, MeanDecreaseGini==max(MeanDecreaseGini)), aes(rn, MeanDecreaseGini),
fill="green", stat="identity")
View(date1)
